name: Release

# TODO: actually doesn't work if semver not incremented. Better to make a separated workflow for this?
on:
  workflow_dispatch:
  push:
    # next and next-major branches are not supported (never used so far & adjustments required)
    branches: [main, '+.x', beta, alpha]
  schedule:
    - cron: '7 8 * * 6' # Every Saturday at 08:07 (weekly release)

# https://docs.github.com/en/actions/writing-workflows/workflow-syntax-for-github-actions#concurrency
concurrency:
  # Prevent concurrent releases on the same branch to avoid tag conflicts (e.g., "latest" on the main branch)
  # Concurrent releases on different branches are allowed, as their tags don't overlap
  #
  # Note: GitHub's concurrency model cancels any *pending* job in the same group when a new one is queued.
  # This means that if multiple release requests are made in quick succession on the *same* branch,
  # only the latest one will proceed — which is acceptable, since it includes all previous changes.
  #
  # However, using the same concurrency group across *different* branches could result in a release
  # request for one branch canceling a pending release for another branch — which is *not* acceptable.
  #
  # Therefore, we scope concurrency to both the workflow and the branch.
  group: ${{ github.workflow }}-${{ github.ref }} # e.g. Release-main
  # Never cancel an ongoing release to prevent harmful interruptions
  cancel-in-progress: false

permissions: {}

jobs:
  release:
    name: Release
    runs-on: ubuntu-24.04
    timeout-minutes: 15

    permissions:
      contents: write # Required to publish a GitHub release
      issues: write # Required to comment on released issues
      pull-requests: write # Required to comment on released pull requests

    steps:
      # Firewall rules:
      # -> "*.github.com": Standard interactions with GitHub
      # -> "objects.githubusercontent.com": Uploading of security reports
      # -> "raw.githubusercontent.com": Retrieve license file when building OCI image
      # -> "*.docker.io" & "*.docker.com": Standard interactions with Docker
      # -> "*.ubuntu.com": Standard interactions with Ubuntu APT repositories
      # -> "api.papermc.io": Dynamic retrieval of the PaperMC server
      # -> "mirror.gcr.io": Downloading of the Trivy security scanner
      # -> "api.nuget.org" & "registry.npmjs.org": Downloading semantic-release CLI
      - name: Harden runner
        uses: step-security/harden-runner@4d991eb9b905ef189e4c376166672c3f2f230481 # v2.11.0
        with:
          disable-sudo: true
          egress-policy: block
          allowed-endpoints: >
            github.com:443
            api.github.com:443
            objects.githubusercontent.com:443
            raw.githubusercontent.com:443
            uploads.github.com:443
            index.docker.io:443
            registry-1.docker.io:443
            auth.docker.io:443
            production.cloudflare.docker.com:443
            archive.ubuntu.com:80
            security.ubuntu.com:80
            ports.ubuntu.com:80
            api.papermc.io:443
            api.nuget.org:443
            registry.npmjs.org:443

      - name: Checkout repository
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
        with:
          persist-credentials: false
          fetch-depth: 0 # Required by semantic-release

      - name: Setup Node.js
        uses: actions/setup-node@1d0ff469b7ec7b3cb9d8673fde0c81c44821de2a # v4.2.0
        with:
          node-version: lts/jod
          cache: npm
          cache-dependency-path: .github/semantic-release/package-lock.json

      - name: Install semantic-release
        working-directory: .github/semantic-release/
        run: npm clean-install

      - name: Login to Docker Hub
        uses: docker/login-action@74a5d142397b4f367a81961eba4e8cd7edddf772 # v3.4.0
        with:
          username: ${{ vars.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      # Setup of QEMU x Buildx
      # Required for multi-arch builds (typically for ARM architecture support)
      # TODO: rely on native ARM64 native node instead of QEMU: https://docs.docker.com/build/ci/github-actions/multi-platform/
      - name: Set up QEMU
        uses: docker/setup-qemu-action@29109295f81e9208d7d86ff1c6c12d2833863392 # v3.6.0

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@b5ca514318bd6ebac0fb2aedd5d36ec1b5c232a2 # v3.10.0

      - name: Release
        env:
          GITHUB_TOKEN: ${{ github.token }}
          ROOT_PROJECT_DIR: ${{ github.workspace }}
          REVISION: ${{ github.sha }}
        working-directory: .github/semantic-release/
        run: npx --no-install semantic-release
