name: Docs - Validate

on:
  workflow_dispatch: {}
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  schedule:
    - cron: '16 5 * * *' # Every day at 05:16 UTC

permissions: {}

jobs:
  build:
    name: Build
    runs-on: ubuntu-24.04
    timeout-minutes: 5

    permissions:
      contents: read

    steps:
      # Firewall rules:
      # -> "*.github.com": Standard interactions with GitHub
      # -> "*.pypi.org" & "files.pythonhosted.org": Downloading Python packages
      # -> "*.docker.io" & "*.docker.com": Standard interactions with Docker
      # -> "*.alpinelinux.org": Standard interactions with Alpine Linux package repositories
      # -> "cdn.fwupd.org": Firmware updates (Alpine)
      - name: Harden runner
        uses: step-security/harden-runner@0634a2670c59f64b4a01f0f96f84700a4088b9f0 # v2.12.0
        with:
          disable-sudo: true
          egress-policy: block
          allowed-endpoints: >
            github.com:443
            api.github.com:443
            pypi.org:443
            files.pythonhosted.org:443
            *.docker.io:443
            *.docker.com:443
            dl-cdn.alpinelinux.org:443
            cdn.fwupd.org:443

      - name: Checkout repository
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
        with:
          persist-credentials: false
          fetch-depth: 0 # Required by MkDocs' Git-related features

      - name: Login to Docker Hub
        uses: docker/login-action@74a5d142397b4f367a81961eba4e8cd7edddf772 # v3.4.0
        if: github.event.pull_request.head.repo.fork == false
        with:
          username: ${{ vars.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Copy License
        run: cp LICENSE.md docs/user-guide/src/license.md

      - name: Build Site
        working-directory: docs/user-guide/
        env:
          GITHUB_TOKEN: ${{ github.token }} # Avoid exceeding the GitHub API rate limits
        run: mkdir site && chmod 775 site && chmod +t site && ls -la site && ./build.sh
